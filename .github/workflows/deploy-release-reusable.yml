#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: deploy-release-reusable

on:
  workflow_call:
    inputs:
      java-version:
        description: "The Java *compiler* version. (Target is fixed: 8)"
        default: 17
        type: string
      project-name:
        description: Identifier used in the distribution artifact and Subversion repository folder filenames (e.g., `logging-parent`)
        required: true
        type: string
    secrets:
      GPG_SECRET_KEY:
        description: GPG secret key for signing artifacts
        required: true
      LOGGING_STAGE_DEPLOYER_USER:
        description: Nexus staging repository username for deploying artifacts
        required: true
      LOGGING_STAGE_DEPLOYER_PW:
        description: Nexus staging repository password for deploying artifacts
        required: true
      SVN_USERNAME:
        description: Subversion username for uploading the release distribution
        required: true
      SVN_PASSWORD:
        description: Subversion password for uploading the release distribution
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744   # 3.6.0

      - name: Set up Java & GPG
        uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2   # 3.7.0
        with:
          distribution: temurin
          java-version: ${{ inputs.java-version }}
          java-package: jdk
          architecture: x64
          cache: maven
          server-id: apache.releases.https
          server-username: NEXUS_USERNAME
          server-password: NEXUS_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}

      - name: Export version
        run: |
          export PROJECT_VERSION=$(./mvnw \
            --quiet --batch-mode -DforceStdout=true \
            -Dexpression=project.version \
            help:evaluate \
            | tail -n 1)
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV

      - name: Upload to Nexus
        run: |
          gpg --list-secret-keys
          ./mvnw \
            --show-version --batch-mode --errors --no-transfer-progress \
            -P deploy,release
        env:
          # `NEXUS_USERNAME` and `NEXUS_PASSWORD` are used in `~/.m2/settings.xml` created by `setup-java` action
          NEXUS_USERNAME: ${{ secrets.LOGGING_STAGE_DEPLOYER_USER }}
          NEXUS_PASSWORD: ${{ secrets.LOGGING_STAGE_DEPLOYER_PW }}
          # `SIGN_KEY` is used by `sign-maven-plugin`
          SIGN_KEY: ${{ secrets.GPG_SECRET_KEY }}

      - name: Create the distribution
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          ./mvnw \
            --show-version --batch-mode --errors --no-transfer-progress \
            --non-recursive -P distribution
          export DIST_FILENAME_PREFIX="apache-${{ inputs.project-name }}"
          export DIST_FILENAME_VERSIONED_PREFIX="${DIST_FILENAME_PREFIX}-${PROJECT_VERSION}"
          export DIST_FILEPATH="/tmp/${DIST_FILENAME_VERSIONED_PREFIX}.zip"
          mv "target/dist.zip" "$DIST_FILEPATH"
          gpg --armor --detach-sign --yes --pinentry-mode error "$DIST_FILEPATH"
          sha512sum "$DIST_FILEPATH" > "$DIST_FILEPATH.sha512"
          cat >> $GITHUB_ENV << EOF
          DIST_FILENAME_PREFIX=$DIST_FILENAME_PREFIX
          DIST_FILENAME_VERSIONED_PREFIX=$DIST_FILENAME_VERSIONED_PREFIX
          DIST_FILEPATH=$DIST_FILEPATH
          EOF

      - name: Upload to Subversion
        run: |

          # Checkout the SVN repository
          export SVN_DIR="/tmp/svn-repo"
          svn co \
            --depth files \
            "https://dist.apache.org/repos/dist/dev/logging" \
            "$SVN_DIR"

          # Switch to the project folder
          cd "$SVN_DIR"
          mkdir -p "${{ inputs.project-name }}" && cd $_

          # Clean up old files
          find . -name "${DIST_FILENAME_PREFIX}*" -type f -print0 | xargs -0 -r svn delete

          # Generate emails
          for EMAIL_TYPE in vote announce; do
            "$GITHUB_WORKSPACE/.github/generate-email.sh" $EMAIL_TYPE $PROJECT_VERSION $GITHUB_SHA \
              > "${DIST_FILENAME_VERSIONED_PREFIX}-email-${EMAIL_TYPE}.txt"
          done

          # Copy the distribution
          cp "$DIST_FILEPATH"* .

          # Add & commit changes
          svn add "${DIST_FILENAME_PREFIX}"*
          svn commit \
            --username "$SVN_USERNAME" \
            --password "$SVN_PASSWORD" \
            -m "Added *fake* \`${DIST_FILENAME_PREFIX}\` artifacts for release \`${PROJECT_VERSION}\`"

        env:
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
